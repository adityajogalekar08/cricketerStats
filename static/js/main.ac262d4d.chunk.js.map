{"version":3,"sources":["logo.svg","components/Stadiums/PieStadium.jsx","components/Dashboard/extract.js","components/Stadiums/LineStadium.jsx","components/Stadiums/BarStadium.jsx","components/Stadiums/Stadium.jsx","components/homepage/homepage.jsx","components/Teams/Teams.jsx","components/Dashboard/dashboard.jsx","App.js","reportWebVitals.js","index.js"],"names":["PieChart","Recharts","Pie","Cell","PieCharts","props","result","team","won","lost","draw","i","data","length","opposition","match_result","getMatchResultsPerTeam","name","value","COLORS","Fragment","className","style","position","top","left","fontSize","marginBottom","width","height","cx","cy","innerRadius","outerRadius","fill","dataKey","paddingAngle","label","map","entry","index","display","justifyContent","alignItems","backgroundColor","marginRight","LineChart","Line","XAxis","YAxis","Tooltip","LineStadium","runs","push","batting_score","getRunsPerTeam","margin","right","bottom","color","type","stroke","strokeWidth","strokeOpacity","activeDot","r","BarChart","Bar","BarStadium","stadiumList","Set","stadiumStats","add","ground","forEach","stadium","j","getStadiumStats","stackId","Stadiums","res","totalRuns","totalCatches","totalWickets","parseInt","wickets","catches","getSummarizedStats","PieStadium","HomePage","delay","to","textDecoration","TeamCards","teams","teamStats","teamName","matches","sort","a","b","nameA","replace","toLowerCase","nameB","comparison","item","activeTeam","onClick","changeTeam","data-id","animationDelay","minHeight","borderBottom","Teams","changeTeamContext","library","faChevronLeft","Dashboard","state","selectedTeam","setTeam","bind","this","setState","currentTarget","dataset","id","icon","Stadium","Component","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac262d4d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport * as Recharts from \"recharts\";\r\nimport { getMatchResultsPerTeam } from \"../Dashboard/extract\";\r\n\r\nconst { PieChart, Pie, Cell } = Recharts;\r\n\r\nconst PieCharts = (props) => {\r\n\tconst result = getMatchResultsPerTeam(props.team);\r\n\tconst data = [\r\n\t\t{ name: \"Wins\", value: result.won },\r\n\t\t{ name: \"Loses\", value: result.lost },\r\n\t\t{ name: \"Draw\", value: result.draw },\r\n\t];\r\n\r\n\tconst COLORS = [\"#28a745\", \"#FA8072\", \"#FFE4B5\"];\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<span\r\n\t\t\t\tclassName=\"ssp-400\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\ttop: \"15px\",\r\n\t\t\t\t\tleft: \"30px\",\r\n\t\t\t\t\tfontSize: \"20px\",\r\n\t\t\t\t\tmarginBottom: \"10px\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tMatch Stats\r\n\t\t\t</span>\r\n\t\t\t<PieChart width={400} height={400} className=\"ssp-700\">\r\n\t\t\t\t<Pie\r\n\t\t\t\t\tdata={data}\r\n\t\t\t\t\tcx={190}\r\n\t\t\t\t\tcy={200}\r\n\t\t\t\t\tinnerRadius={60}\r\n\t\t\t\t\touterRadius={80}\r\n\t\t\t\t\tfill=\"#8884d8\"\r\n\t\t\t\t\tdataKey=\"value\"\r\n\t\t\t\t\tpaddingAngle={5}\r\n\t\t\t\t\tlabel\r\n\t\t\t\t>\r\n\t\t\t\t\t{data.map((entry, index) => (\r\n\t\t\t\t\t\t<Cell\r\n\t\t\t\t\t\t\tkey={`cell-${index}`}\r\n\t\t\t\t\t\t\tdataKey={entry.value}\r\n\t\t\t\t\t\t\tfill={COLORS[index % COLORS.length]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Pie>\r\n\t\t\t</PieChart>\r\n\t\t\t<div className=\"pie-info\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"ssp-400\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\tjustifyContent: \"flex-start\",\r\n\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"pie-color\"\r\n\t\t\t\t\t\tstyle={{ backgroundColor: \"#0088FE\", marginRight: \"10px\" }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\tWon\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"ssp-400\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\tjustifyContent: \"flex-start\",\r\n\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"pie-color\"\r\n\t\t\t\t\t\tstyle={{ backgroundColor: \"#00C49F\", marginRight: \"10px\" }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\tLost\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"ssp-400\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\tjustifyContent: \"flex-start\",\r\n\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"pie-color\"\r\n\t\t\t\t\t\tstyle={{ backgroundColor: \"#FFE4B5\", marginRight: \"10px\" }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\tDraw\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default PieCharts;\r\n","import data from \"../../assests/data.json\";\r\n\r\n//Return Total runs, catches and wickets against a team (for small cards)\r\nconst getSummarizedStats = (team) => {\r\n\tlet totalRuns = 0;\r\n\tlet totalCatches = 0;\r\n\tlet totalWickets = 0;\r\n\tfor (let i = 0; i < data.length; i++) {\r\n\t\tif (data[i].opposition === team) {\r\n\t\t\tif (data[i].batting_score !== \"TDNB\" && data[i].batting_score !== \"DNB\") {\r\n\t\t\t\ttotalRuns += parseInt(data[i].batting_score, 10);\r\n\t\t\t}\r\n\t\t\tif (data[i].wickets !== \"-\") {\r\n\t\t\t\ttotalWickets += parseInt(data[i].wickets, 10);\r\n\t\t\t}\r\n\t\t\tif (data[i].catches !== \"-\") {\r\n\t\t\t\ttotalCatches += parseInt(data[i].catches, 10);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn { totalRuns, totalCatches, totalWickets };\r\n};\r\n\r\n// Return runs per match per team from data (for line chart)\r\nconst getRunsPerTeam = (team) => {\r\n\tconst runs = [];\r\n\tfor (let i = 0; i < data.length; i++) {\r\n\t\tif (data[i].opposition === team) {\r\n\t\t\truns.push({\r\n\t\t\t\tname: `Match${i + 1}`,\r\n\t\t\t\truns: data[i].batting_score,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\treturn runs;\r\n};\r\n\r\n// Return wins/loses per team from data (for pie chart)\r\nconst getMatchResultsPerTeam = (team) => {\r\n\tlet won = 0;\r\n\tlet lost = 0;\r\n\tlet draw = 0;\r\n\tfor (let i = 0; i < data.length; i++) {\r\n\t\tif (data[i].opposition === team) {\r\n\t\t\tswitch (data[i].match_result) {\r\n\t\t\t\tcase \"won\":\r\n\t\t\t\t\twon++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"lost\":\r\n\t\t\t\t\tlost++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"n/r\":\r\n\t\t\t\t\tdraw++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn { won, lost, draw };\r\n};\r\n\r\n//Return Stadium stats per team from data (for bar chart)\r\nconst getStadiumStats = (team) => {\r\n\tlet stadiumList = new Set([]);\r\n\tlet stadiumStats = [];\r\n\tfor (let i = 0; i < data.length; i++) {\r\n\t\tif (data[i].opposition === team) {\r\n\t\t\tstadiumList.add(data[i].ground);\r\n\t\t}\r\n\t}\r\n\r\n\t//create an array of object for each unique stadium with default values(0)\r\n\tstadiumList.forEach((stadium) => {\r\n\t\treturn stadiumStats.push({\r\n\t\t\tground: stadium,\r\n\t\t\twon: 0,\r\n\t\t\tlost: 0,\r\n\t\t});\r\n\t});\r\n\r\n\t//update stadiumStats\r\n\tfor (let i = 0; i < data.length; i++) {\r\n\t\tif (data[i].match_result === \"won\") {\r\n\t\t\tfor (let j = 0; j < stadiumStats.length; j++) {\r\n\t\t\t\tif (\r\n\t\t\t\t\tstadiumStats[j].ground === data[i].ground &&\r\n\t\t\t\t\tdata[i].opposition === team\r\n\t\t\t\t) {\r\n\t\t\t\t\tstadiumStats[j].won++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (data[i].match_result === \"lost\" && data[i].opposition === team) {\r\n\t\t\tfor (let j = 0; j < stadiumStats.length; j++) {\r\n\t\t\t\tif (stadiumStats[j].ground === data[i].ground) {\r\n\t\t\t\t\tstadiumStats[j].lost++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn stadiumStats;\r\n};\r\n\r\n// Return opposition teams and respective matches from data (for team list)\r\nconst teams = () => {\r\n\tconst teams = new Set([]);\r\n\tlet teamStats = [];\r\n\tfor (let i = 0; i < data.length; i++) {\r\n\t\tteams.add(data[i].opposition);\r\n\t}\r\n\r\n\tteams.forEach((team) => {\r\n\t\treturn teamStats.push({\r\n\t\t\tteamName: team,\r\n\t\t\tmatches: 0,\r\n\t\t});\r\n\t});\r\n\r\n\tfor (let i = 0; i < data.length; i++) {\r\n\t\tfor (let j = 0; j < teamStats.length; j++) {\r\n\t\t\tif (teamStats[j].teamName === data[i].opposition) {\r\n\t\t\t\tteamStats[j].matches++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tlet sortedTeamDetails = teamStats.sort((a, b) => {\r\n\t\tlet nameA = a.teamName.replace(/\\.| /g, \"\").toLowerCase();\r\n\t\tlet nameB = b.teamName.replace(/\\.| /g, \"\").toLowerCase();\r\n\t\tlet comparison = 0;\r\n\t\tif (nameA > nameB) {\r\n\t\t\tcomparison = 1;\r\n\t\t} else if (nameA < nameB) {\r\n\t\t\tcomparison = -1;\r\n\t\t}\r\n\t\treturn comparison;\r\n\t});\r\n\r\n\treturn sortedTeamDetails;\r\n};\r\n\r\nexport {\r\n\tteams,\r\n\tgetSummarizedStats,\r\n\tgetRunsPerTeam,\r\n\tgetMatchResultsPerTeam,\r\n\tgetStadiumStats,\r\n};\r\n","import React from \"react\";\r\nimport \"../Dashboard/dashboard.css\";\r\nimport * as Recharts from \"recharts\";\r\nimport { getRunsPerTeam } from \"../Dashboard/extract\";\r\n\r\nconst { LineChart, Line, XAxis, YAxis, Tooltip } = Recharts;\r\n\r\nconst LineStadium = (props) => {\r\n\tconst data = getRunsPerTeam(props.team);\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<span\r\n\t\t\t\tclassName=\"ssp-400\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\ttop: \"15px\",\r\n\t\t\t\t\tleft: \"30px\",\r\n\t\t\t\t\tfontSize: \"20px\",\r\n\t\t\t\t\tmarginBottom: \"10px\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tRuns per match against {props.team}\r\n\t\t\t</span>\r\n\t\t\t<LineChart\r\n\t\t\t\twidth={900}\r\n\t\t\t\theight={250}\r\n\t\t\t\tdata={data}\r\n\t\t\t\tmargin={{ top: 40, right: 30, left: 0, bottom: -10 }}\r\n\t\t\t\tclassName=\"ssp-400\"\r\n\t\t\t\tstyle={{ color: \"#4150f5\" }}\r\n\t\t\t>\r\n\t\t\t\t<XAxis />\r\n\t\t\t\t<YAxis />\r\n\t\t\t\t<Tooltip />\r\n\t\t\t\t<Line\r\n\t\t\t\t\ttype=\"monotone\"\r\n\t\t\t\t\tdataKey=\"runs\"\r\n\t\t\t\t\tstroke=\"#4150f5\"\r\n\t\t\t\t\tstrokeWidth=\"3\"\r\n\t\t\t\t\tstrokeOpacity=\"0.85\"\r\n\t\t\t\t\tactiveDot={{ r: 8 }}\r\n\t\t\t\t/>\r\n\t\t\t</LineChart>\r\n\t\t\t<span\r\n\t\t\t\tclassName=\"ssp-400\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tcolor: \"white\",\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\tbottom: \"7px\",\r\n\t\t\t\t\tleft: \"47%\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tMatches\r\n\t\t\t</span>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default LineStadium;\r\n","import React from \"react\";\r\nimport * as Recharts from \"recharts\";\r\nimport { getStadiumStats } from \"../Dashboard/extract\";\r\n\r\nconst { BarChart, Bar, XAxis, YAxis, Tooltip } = Recharts;\r\n\r\nconst BarStadium = (props) => {\r\n\tlet result = getStadiumStats(props.team);\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<span\r\n\t\t\t\tclassName=\"ssp-400\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\ttop: \"15px\",\r\n\t\t\t\t\tleft: \"30px\",\r\n\t\t\t\t\tfontSize: \"20px\",\r\n\t\t\t\t\tmarginBottom: \"10px\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tStadium Stats\r\n\t\t\t</span>\r\n\t\t\t<BarChart\r\n\t\t\t\twidth={400}\r\n\t\t\t\theight={200}\r\n\t\t\t\tdata={result}\r\n\t\t\t\tmargin={{ top: 30, right: 40, left: -20, bottom: -30 }}\r\n\t\t\t\tclassName=\"ssp-400\"\r\n\t\t\t\tstyle={{ color: \"#1b2136\" }}\r\n\t\t\t>\r\n\t\t\t\t<XAxis dataKey=\"ground\" />\r\n\t\t\t\t<YAxis />\r\n\t\t\t\t<Tooltip />\r\n\t\t\t\t<Bar dataKey=\"won\" stackId=\"a\" fill=\"#28a745\" />\r\n\t\t\t\t<Bar dataKey=\"lost\" stackId=\"a\" fill=\"#FA8072\" />\r\n\t\t\t</BarChart>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default BarStadium;\r\n","import React from \"react\";\r\nimport \"../Dashboard/dashboard.css\";\r\nimport LineStadium from \"./LineStadium\";\r\nimport PieStadium from \"./PieStadium\";\r\nimport BarStadium from \"./BarStadium\";\r\nimport { getSummarizedStats } from \"../Dashboard/extract\";\r\n\r\nconst Stadiums = (props) => {\r\n\tconst res = getSummarizedStats(props.team);\r\n\treturn (\r\n\t\t<div className=\"stadium\">\r\n\t\t\t<header className=\"ssp-300 stadium-headline\">\r\n\t\t\t\tSachin vs {props.team}\r\n\t\t\t</header>\r\n\t\t\t<section className=\"line-chart-container\">\r\n\t\t\t\t<LineStadium team={props.team} />\r\n\t\t\t</section>\r\n\t\t\t<section className=\"dual-row\">\r\n\t\t\t\t<div className=\"dual-boxes\">\r\n\t\t\t\t\t<PieStadium team={props.team} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"dual-boxes radar\">\r\n\t\t\t\t\t<BarStadium team={props.team} />\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t\t<br />\r\n\t\t\t<section className=\"single-insight-cards\">\r\n\t\t\t\t<div className=\"details runs ssp-400\">\r\n\t\t\t\t\t<span style={{ fontSize: \"18px\", color: \"white\" }}>Runs</span>\r\n\t\t\t\t\t{res.totalRuns}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"details wickets ssp-400\">\r\n\t\t\t\t\t<span style={{ fontSize: \"18px\", color: \"white\" }}>Wickets</span>\r\n\t\t\t\t\t{res.totalWickets}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"details catches ssp-400\">\r\n\t\t\t\t\t<span style={{ fontSize: \"18px\", color: \"white\" }}>Catches</span>\r\n\t\t\t\t\t{res.totalCatches}\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Stadiums;\r\n","import React from \"react\";\r\nimport Fade from \"react-reveal\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PieCharts from \"../Stadiums/PieStadium\";\r\nimport Stadiums from \"../Stadiums/Stadium\";\r\nimport \"./homepage.css\";\r\n\r\nconst HomePage = () => {\r\n\treturn (\r\n\t\t<section className=\"homesection\">\r\n\t\t\t<div className=\"content\">\r\n\t\t\t\t<Fade bottom delay={1000}>\r\n\t\t\t\t\t<span className=\"pd-700 title\">Sachin Tendulkar</span>\r\n\t\t\t\t</Fade>\r\n\t\t\t\t{/*<Fade bottom delay={8000}>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tDo your crime when sachin is batting, even God is busy watching him\r\n\t\t\t\t\t\tplay. <br />- <i>Australian Fan</i>\r\n\t\t\t\t\t</p>\r\n\t</Fade>*/}\r\n\t\t\t</div>\r\n\t\t\t{/* <div className=\"homeborder\" /> \r\n\t\t\t<Fade bottom delay={10000}>\r\n\t\t\t\t<div className=\"wrapper\">\r\n\t\t\t\t\t<div className=\"stats\">Career Batting Stats</div>\r\n\t\t\t\t\t<div className=\"Teststats\">Test: 1989–13</div>\r\n\t\t\t\t\t<div className=\"RunsTeststats\">Runs: 15921</div>\r\n\t\t\t\t\t<div className=\"ODIstats\">ODI: 1989-12</div>\r\n\t\t\t\t\t<div className=\"RunsODIstats\">Runs:18426</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Fade>*/}\r\n\t\t\t<br />\r\n\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t\t<div>\r\n\t\t\t\t<Link to=\"/dashboard\" style={{ textDecoration: \"none\" }}>\r\n\t\t\t\t\t<Fade bottom delay={10000}>\r\n\t\t\t\t\t\t<button className=\"dashboard-button\">Stat Page</button>\r\n\t\t\t\t\t</Fade>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t</section>\r\n\t);\r\n};\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport \"../Dashboard/dashboard.css\";\r\nimport { teams } from \"../Dashboard/extract\";\r\n\r\nconst TeamCards = (props) => {\r\n\tconst teamsList = teams();\r\n\treturn teamsList.map((item, i) => {\r\n\t\tif (props.activeTeam === item.teamName) {\r\n\t\t\treturn (\r\n\t\t\t\t<li\r\n\t\t\t\t\tclassName=\"team-card team-card-appear\"\r\n\t\t\t\t\tvalue=\"nameeee\"\r\n\t\t\t\t\tkey={i}\r\n\t\t\t\t\tonClick={props.changeTeam}\r\n\t\t\t\t\tdata-id={item.teamName}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tanimationDelay: `${i * 40}ms`,\r\n\t\t\t\t\t\tminHeight: \"110px\",\r\n\t\t\t\t\t\tborderBottom: \"5px solid #2F82EC\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<p className=\"ssp-400 team-name\" style={{ fontSize: \"21px\" }}>\r\n\t\t\t\t\t\t{item.teamName}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t{item.matches === 1 ? (\r\n\t\t\t\t\t\t<span className=\"ssp-400 team-matches\">{item.matches} match</span>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<span className=\"ssp-400 team-matches\">{item.matches} matches</span>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</li>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<li\r\n\t\t\t\tclassName=\"team-card team-card-appear\"\r\n\t\t\t\tvalue=\"nameeee\"\r\n\t\t\t\tkey={i}\r\n\t\t\t\tonClick={props.changeTeam}\r\n\t\t\t\tdata-id={item.teamName}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tanimationDelay: `${i * 40}ms`,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<p className=\"ssp-400 team-name\">{item.teamName}</p>\r\n\t\t\t\t{item.matches === 1 ? (\r\n\t\t\t\t\t<span className=\"ssp-400 team-matches\">{item.matches} match</span>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<span className=\"ssp-400 team-matches\">{item.matches} matches</span>\r\n\t\t\t\t)}\r\n\t\t\t</li>\r\n\t\t);\r\n\t});\r\n};\r\nconst Teams = (props) => {\r\n\treturn (\r\n\t\t<div className=\"team-cards-container\">\r\n\t\t\t<TeamCards\r\n\t\t\t\tactiveTeam={props.activeTeam}\r\n\t\t\t\tchangeTeam={props.changeTeamContext}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Teams;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./dashboard.css\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Teams from \"../Teams/Teams\";\r\nimport Stadiums from \"../Stadiums/Stadium\";\r\n\r\nlibrary.add(faChevronLeft);\r\nexport default class Dashboard extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tselectedTeam: \"Australia\",\r\n\t\t};\r\n\t\tthis.setTeam = this.setTeam.bind(this);\r\n\t}\r\n\r\n\tsetTeam(data) {\r\n\t\tthis.setState({\r\n\t\t\tselectedTeam: data.currentTarget.dataset.id,\r\n\t\t});\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"dashboard-placeholder ssp-300\">\r\n\t\t\t\t\tTo view dashboard switch to larger device\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"dashboard-container\">\r\n\t\t\t\t\t<div className=\"sidebar-add\">\r\n\t\t\t\t\t\t<Link to=\"/\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n\t\t\t\t\t\t\t<div className=\"back-arrow\">\r\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon=\"chevron-left\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"teams-container\">\r\n\t\t\t\t\t\t<header className=\"team-headline ssp-300\">Teams</header>\r\n\t\t\t\t\t\t<Teams\r\n\t\t\t\t\t\t\tactiveTeam={this.state.selectedTeam}\r\n\t\t\t\t\t\t\tchangeTeamContext={this.setTeam}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<Stadiums team={this.state.selectedTeam} />\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport HomePage from \"./components/homepage/homepage\";\nimport { Switch, BrowserRouter, Route } from \"react-router-dom\";\nimport Dashboard from \"./components/Dashboard/dashboard.jsx\";\n\nfunction App() {\n\treturn (\n\t\t<>\n\t\t\t<BrowserRouter>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/\" exact component={HomePage} />\n\t\t\t\t\t<Route path=\"/dashboard\" exact component={Dashboard} />\n\t\t\t\t</Switch>\n\t\t\t</BrowserRouter>\n\t\t</>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}